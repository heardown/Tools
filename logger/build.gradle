apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion ANDROID_BUILD_SDK_VERSION as int

    defaultConfig {
        minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.alibaba:fastjson:1.2.59'
}



task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}

uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            if (USE_MAVEN_LOCAL.toBoolean()) {
                repository(url: mavenLocal().getUrl()) //本地构建
                pom.project {
                    version '0.0.1-SNAPSHOT'
                    artifactId 'logger'
                    groupId GROUP_ID
                    packaging TYPE
                    description DESCRIPTION
                }
            } else {
                snapshotRepository(url: config.MAVEN_REPO_SNAPSHOT_URL) {
                    authentication(userName: config.NEXUS_USERNAME, password: config.NEXUS_PASSWORD)
                }
                repository(url: config.MAVEN_REPO_RELEASE_URL) {
                    authentication(userName: config.NEXUS_USERNAME, password: config.NEXUS_PASSWORD)
                }
                pom.project {
                    version '0.0.4'
                    artifactId 'logger'
                    groupId GROUP_ID
                    packaging TYPE
                    description DESCRIPTION
                }
            }
        }
    }
}


